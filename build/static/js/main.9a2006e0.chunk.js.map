{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["getUrl","searchTerm","page","concat","extractSearchTerm","url","substring","lastIndexOf","replace","storiesReducer","state","action","type","isLoading","isError","data","payload","list","filter","story","objectID","Error","LastSearches","_ref","lastSearches","onLastSearch","React","map","index","key","onClick","SearchForm","_ref2","onSearchInput","onSearchSubmit","onSubmit","InputWithLabel","id","value","isFocused","onInputChange","disabled","_ref3","children","inputRef","current","focus","htmlFor","ref","onChange","SORTS","NONE","TITLE","sortBy","AUTHOR","COMMENT","reverse","POINT","List","_ref4","onRemoveItem","sort","setSort","sortKey","isReverse","handleSort","sortFunction","sortedList","style","display","width","item","Item","_ref5","href","title","author","num_comments","points","App","setSearchTerm","useSemiPersistentState","initialState","setValue","localStorage","getItem","setItem","urls","setUrls","stories","dispatchStories","handleFetchStories","async","lastUrl","length","result","axios","get","hits","handleSearch","reduce","slice","getLastSearches","event","target","preventDefault","handleMore","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","createElement","StrictMode"],"mappings":"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","file":"static/js/main.9a2006e0.chunk.js","sourcesContent":["import * as React from 'react';\nimport axios from 'axios';\nimport { sortBy } from 'lodash';\n\nconst API_BASE = 'https://hn.algolia.com/api/v1';\nconst API_SEARCH = '/search';\nconst PARAM_SEARCH = 'query=';\nconst PARAM_PAGE = 'page=';\n\nconst getUrl = (searchTerm, page) =>\n  `${API_BASE}${API_SEARCH}?${PARAM_SEARCH}${searchTerm}&${PARAM_PAGE}${page}`;\n\nconst extractSearchTerm = (url) =>\n  url\n    .substring(url.lastIndexOf('?') + 1, url.lastIndexOf('&'))\n    .replace(PARAM_SEARCH, '');\n\nconst getLastSearches = (urls) =>\n  urls\n    .reduce((result, url, index) => {\n      const searchTerm = extractSearchTerm(url);\n\n      if (index === 0) {\n        return result.concat(searchTerm);\n      }\n\n      const previousSearchTerm = result[result.length - 1];\n\n      if (searchTerm === previousSearchTerm) {\n        return result;\n      } else {\n        return result.concat(searchTerm);\n      }\n    }, [])\n    .slice(-6)\n    .slice(0, -1);\n\nconst useSemiPersistentState = (key, initialState) => {\n  const [value, setValue] = React.useState(\n    localStorage.getItem(key) || initialState\n  );\n\n  React.useEffect(() => {\n    localStorage.setItem(key, value);\n  }, [value, key]);\n\n  return [value, setValue];\n};\n\nconst storiesReducer = (state, action) => {\n  switch (action.type) {\n    case 'STORIES_FETCH_INIT':\n      return {\n        ...state,\n        isLoading: true,\n        isError: false,\n      };\n    case 'STORIES_FETCH_SUCCESS':\n      return {\n        ...state,\n        isLoading: false,\n        isError: false,\n        data:\n          action.payload.page === 0\n            ? action.payload.list\n            : state.data.concat(action.payload.list),\n        page: action.payload.page,\n      };\n    case 'STORIES_FETCH_FAILURE':\n      return {\n        ...state,\n        isLoading: false,\n        isError: true,\n      };\n    case 'REMOVE_STORY':\n      return {\n        ...state,\n        data: state.data.filter(\n          (story) => action.payload.objectID !== story.objectID\n        ),\n      };\n    default:\n      throw new Error();\n  }\n};\n\nconst App = () => {\n  const [searchTerm, setSearchTerm] = useSemiPersistentState(\n    'search',\n    'React'\n  );\n\n  const [urls, setUrls] = React.useState([getUrl(searchTerm, 0)]);\n\n  const [stories, dispatchStories] = React.useReducer(\n    storiesReducer,\n    { data: [], page: 0, isLoading: false, isError: false }\n  );\n\n  const handleFetchStories = React.useCallback(async () => {\n    dispatchStories({ type: 'STORIES_FETCH_INIT' });\n\n    try {\n      const lastUrl = urls[urls.length - 1];\n      const result = await axios.get(lastUrl);\n\n      dispatchStories({\n        type: 'STORIES_FETCH_SUCCESS',\n        payload: {\n          list: result.data.hits,\n          page: result.data.page,\n        },\n      });\n    } catch {\n      dispatchStories({ type: 'STORIES_FETCH_FAILURE' });\n    }\n  }, [urls]);\n\n  React.useEffect(() => {\n    handleFetchStories();\n  }, [handleFetchStories]);\n\n  const handleRemoveStory = (item) => {\n    dispatchStories({\n      type: 'REMOVE_STORY',\n      payload: item,\n    });\n  };\n\n  const handleSearchInput = (event) => {\n    setSearchTerm(event.target.value);\n  };\n\n  const handleSearchSubmit = (event) => {\n    handleSearch(searchTerm, 0);\n\n    event.preventDefault();\n  };\n\n  const handleLastSearch = (searchTerm) => {\n    setSearchTerm(searchTerm);\n\n    handleSearch(searchTerm, 0);\n  };\n\n  const handleMore = () => {\n    const lastUrl = urls[urls.length - 1];\n    const searchTerm = extractSearchTerm(lastUrl);\n    handleSearch(searchTerm, stories.page + 1);\n  };\n\n  const handleSearch = (searchTerm, page) => {\n    const url = getUrl(searchTerm, page);\n    setUrls(urls.concat(url));\n  };\n\n  const lastSearches = getLastSearches(urls);\n\n  return (\n    <div>\n      <h1>My Hacker Stories</h1>\n\n      <SearchForm\n        searchTerm={searchTerm}\n        onSearchInput={handleSearchInput}\n        onSearchSubmit={handleSearchSubmit}\n      />\n\n      <LastSearches\n        lastSearches={lastSearches}\n        onLastSearch={handleLastSearch}\n      />\n\n      <hr />\n\n      {stories.isError && <p>Something went wrong ...</p>}\n\n      <List list={stories.data} onRemoveItem={handleRemoveStory} />\n\n      {stories.isLoading ? (\n        <p>Loading ...</p>\n      ) : (\n        <button type=\"button\" onClick={handleMore}>\n          More\n        </button>\n      )}\n    </div>\n  );\n};\n\nconst LastSearches = ({ lastSearches, onLastSearch }) => (\n  <>\n    {lastSearches.map((searchTerm, index) => (\n      <button\n        key={searchTerm + index}\n        type=\"button\"\n        onClick={() => onLastSearch(searchTerm)}\n      >\n        {searchTerm}\n      </button>\n    ))}\n  </>\n);\n\nconst SearchForm = ({\n  searchTerm,\n  onSearchInput,\n  onSearchSubmit,\n}) => (\n  <form onSubmit={onSearchSubmit}>\n    <InputWithLabel\n      id=\"search\"\n      value={searchTerm}\n      isFocused\n      onInputChange={onSearchInput}\n    >\n      <strong>Search:</strong>\n    </InputWithLabel>\n\n    <button type=\"submit\" disabled={!searchTerm}>\n      Submit\n    </button>\n  </form>\n);\n\nconst InputWithLabel = ({\n  id,\n  value,\n  type = 'text',\n  onInputChange,\n  isFocused,\n  children,\n}) => {\n  const inputRef = React.useRef();\n\n  React.useEffect(() => {\n    if (isFocused && inputRef.current) {\n      inputRef.current.focus();\n    }\n  }, [isFocused]);\n\n  return (\n    <>\n      <label htmlFor={id}>{children}</label>\n      &nbsp;\n      <input\n        id={id}\n        ref={inputRef}\n        type={type}\n        value={value}\n        onChange={onInputChange}\n      />\n    </>\n  );\n};\n\nconst SORTS = {\n  NONE: (list) => list,\n  TITLE: (list) => sortBy(list, 'title'),\n  AUTHOR: (list) => sortBy(list, 'author'),\n  COMMENT: (list) => sortBy(list, 'num_comments').reverse(),\n  POINT: (list) => sortBy(list, 'points').reverse(),\n};\n\nconst List = ({ list, onRemoveItem }) => {\n  const [sort, setSort] = React.useState({\n    sortKey: 'NONE',\n    isReverse: false,\n  });\n\n  const handleSort = (sortKey) => {\n    const isReverse = sort.sortKey === sortKey && !sort.isReverse;\n\n    setSort({ sortKey, isReverse });\n  };\n\n  const sortFunction = SORTS[sort.sortKey];\n  const sortedList = sort.isReverse\n    ? sortFunction(list).reverse()\n    : sortFunction(list);\n\n  return (\n    <ul>\n      <li style={{ display: 'flex' }}>\n        <span style={{ width: '40%' }}>\n          <button type=\"button\" onClick={() => handleSort('TITLE')}>\n            Title\n          </button>\n        </span>\n        <span style={{ width: '30%' }}>\n          <button type=\"button\" onClick={() => handleSort('AUTHOR')}>\n            Author\n          </button>\n        </span>\n        <span style={{ width: '10%' }}>\n          <button type=\"button\" onClick={() => handleSort('COMMENT')}>\n            Comments\n          </button>\n        </span>\n        <span style={{ width: '10%' }}>\n          <button type=\"button\" onClick={() => handleSort('POINT')}>\n            Points\n          </button>\n        </span>\n        <span style={{ width: '10%' }}>Actions</span>\n      </li>\n\n      {sortedList.map((item) => (\n        <Item\n          key={item.objectID}\n          item={item}\n          onRemoveItem={onRemoveItem}\n        />\n      ))}\n    </ul>\n  );\n};\n\nconst Item = ({ item, onRemoveItem }) => (\n  <li style={{ display: 'flex' }}>\n    <span style={{ width: '40%' }}>\n      <a href={item.url}>{item.title}</a>\n    </span>\n    <span style={{ width: '30%' }}>{item.author}</span>\n    <span style={{ width: '10%' }}>{item.num_comments}</span>\n    <span style={{ width: '10%' }}>{item.points}</span>\n    <span style={{ width: '10%' }}>\n      <button type=\"button\" onClick={() => onRemoveItem(item)}>\n        Dismiss\n      </button>\n    </span>\n  </li>\n);\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App.js';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}